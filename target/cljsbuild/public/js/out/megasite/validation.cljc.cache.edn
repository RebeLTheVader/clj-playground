;; Analyzed by ClojureScript 1.7.228
{:use-macros nil, :excludes #{}, :name megasite.validation, :imports nil, :requires {b bouncer.core, bouncer.core bouncer.core, v bouncer.validators, bouncer.validators bouncer.validators}, :uses nil, :defs {registration-errors {:protocol-inline nil, :meta {:file "/home/rebel/developer/megasite/src/cljc/megasite/validation.cljc", :line 5, :column 7, :end-line 5, :end-column 26, :arglists (quote ([{:keys [pass-confirm], :as params}]))}, :name megasite.validation/registration-errors, :variadic false, :file "src/cljc/megasite/validation.cljc", :end-column 26, :method-params ([p__39626]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 5, :end-line 5, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [pass-confirm], :as params}]))}}, :require-macros {v bouncer.validators, bouncer.validators bouncer.validators}, :cljs.analyzer/constants {:seen #{:pass-confirm :id :pass :message}, :order [:pass-confirm :id :pass :message]}, :doc nil}