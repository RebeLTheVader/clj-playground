;; Analyzed by ClojureScript 1.7.228
{:use-macros nil, :excludes #{}, :name markdown.links, :imports nil, :requires {string clojure.string, clojure.string clojure.string, markdown.common markdown.common}, :uses {italics markdown.common, bold markdown.common, freeze-string markdown.common, strong markdown.common, em markdown.common, strikethrough markdown.common}, :defs {replace-all-footnote-links {:protocol-inline nil, :meta {:file "/home/rebel/developer/megasite/target/cljsbuild/public/js/out/markdown/links.cljc", :line 126, :column 7, :end-line 126, :end-column 33, :arglists (quote ([text {:keys [footnotes], :as state}]))}, :name markdown.links/replace-all-footnote-links, :variadic false, :file "target/cljsbuild/public/js/out/markdown/links.cljc", :end-column 33, :method-params ([text p__38379]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 126, :end-line 126, :max-fixed-arity 2, :fn-var true, :arglists (quote ([text {:keys [footnotes], :as state}]))}, href {:protocol-inline nil, :meta {:file "/home/rebel/developer/megasite/target/cljsbuild/public/js/out/markdown/links.cljc", :line 12, :column 7, :end-line 12, :end-column 11, :arglists (quote ([title link state]))}, :name markdown.links/href, :variadic false, :file "target/cljsbuild/public/js/out/markdown/links.cljc", :end-column 11, :method-params ([title link state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 12, :end-line 12, :max-fixed-arity 3, :fn-var true, :arglists (quote ([title link state]))}, img {:protocol-inline nil, :meta {:file "/home/rebel/developer/megasite/target/cljsbuild/public/js/out/markdown/links.cljc", :line 15, :column 7, :end-line 15, :end-column 10, :arglists (quote ([alt url state & [title]])), :top-fn {:variadic true, :max-fixed-arity 3, :method-params [(alt url state [title])], :arglists ([alt url state & [title]]), :arglists-meta (nil)}}, :name markdown.links/img, :variadic true, :file "target/cljsbuild/public/js/out/markdown/links.cljc", :end-column 10, :top-fn {:variadic true, :max-fixed-arity 3, :method-params [(alt url state [title])], :arglists ([alt url state & [title]]), :arglists-meta (nil)}, :method-params [(alt url state [title])], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 15, :end-line 15, :max-fixed-arity 3, :fn-var true, :arglists ([alt url state & [title]])}, parse-footnote-link {:protocol-inline nil, :meta {:file "/home/rebel/developer/megasite/target/cljsbuild/public/js/out/markdown/links.cljc", :line 115, :column 7, :end-line 115, :end-column 26, :arglists (quote ([line footnotes]))}, :name markdown.links/parse-footnote-link, :variadic false, :file "target/cljsbuild/public/js/out/markdown/links.cljc", :end-column 26, :method-params ([line footnotes]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 115, :end-line 115, :max-fixed-arity 2, :fn-var true, :arglists (quote ([line footnotes]))}, footnote-link {:protocol-inline nil, :meta {:file "/home/rebel/developer/megasite/target/cljsbuild/public/js/out/markdown/links.cljc", :line 139, :column 7, :end-line 139, :end-column 20, :arglists (quote ([text {:keys [code codeblock footnotes], :as state}]))}, :name markdown.links/footnote-link, :variadic false, :file "target/cljsbuild/public/js/out/markdown/links.cljc", :end-column 20, :method-params ([text p__38386]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 139, :end-line 139, :max-fixed-arity 2, :fn-var true, :arglists (quote ([text {:keys [code codeblock footnotes], :as state}]))}, reference-link {:protocol-inline nil, :meta {:file "/home/rebel/developer/megasite/target/cljsbuild/public/js/out/markdown/links.cljc", :line 98, :column 7, :end-line 98, :end-column 21, :arglists (quote ([text {:keys [code codeblock references], :as state}]))}, :name markdown.links/reference-link, :variadic false, :file "target/cljsbuild/public/js/out/markdown/links.cljc", :end-column 21, :method-params ([text p__38374]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 98, :end-line 98, :max-fixed-arity 2, :fn-var true, :arglists (quote ([text {:keys [code codeblock references], :as state}]))}, make-link {:protocol-inline nil, :meta {:file "/home/rebel/developer/megasite/target/cljsbuild/public/js/out/markdown/links.cljc", :line 40, :column 7, :end-line 40, :end-column 16, :arglists (quote ([img?]))}, :name markdown.links/make-link, :variadic false, :file "target/cljsbuild/public/js/out/markdown/links.cljc", :end-column 16, :method-params ([img?]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 40, :end-line 40, :max-fixed-arity 1, :fn-var true, :arglists (quote ([img?]))}, replace-footnote-link {:protocol-inline nil, :meta {:file "/home/rebel/developer/megasite/target/cljsbuild/public/js/out/markdown/links.cljc", :line 121, :column 7, :end-line 121, :end-column 28, :arglists (quote ([footnotes footnote]))}, :name markdown.links/replace-footnote-link, :variadic false, :file "target/cljsbuild/public/js/out/markdown/links.cljc", :end-column 28, :method-params ([footnotes footnote]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 121, :end-line 121, :max-fixed-arity 2, :fn-var true, :arglists (quote ([footnotes footnote]))}, replace-reference-link {:protocol-inline nil, :meta {:file "/home/rebel/developer/megasite/target/cljsbuild/public/js/out/markdown/links.cljc", :line 93, :column 7, :end-line 93, :end-column 29, :arglists (quote ([references reference]))}, :name markdown.links/replace-reference-link, :variadic false, :file "target/cljsbuild/public/js/out/markdown/links.cljc", :end-column 29, :method-params ([references reference]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 93, :end-line 93, :max-fixed-arity 2, :fn-var true, :arglists (quote ([references reference]))}, handle-img-link {:protocol-inline nil, :meta {:file "/home/rebel/developer/megasite/target/cljsbuild/public/js/out/markdown/links.cljc", :line 23, :column 7, :end-line 23, :end-column 22, :arglists (quote ([xs state]))}, :name markdown.links/handle-img-link, :variadic false, :file "target/cljsbuild/public/js/out/markdown/links.cljc", :end-column 22, :method-params ([xs state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 23, :end-line 23, :max-fixed-arity 2, :fn-var true, :arglists (quote ([xs state]))}, parse-reference {:protocol-inline nil, :meta {:file "/home/rebel/developer/megasite/target/cljsbuild/public/js/out/markdown/links.cljc", :line 81, :column 7, :end-line 81, :end-column 22, :arglists (quote ([reference start]))}, :name markdown.links/parse-reference, :variadic false, :file "target/cljsbuild/public/js/out/markdown/links.cljc", :end-column 22, :method-params ([reference start]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 81, :end-line 81, :max-fixed-arity 2, :fn-var true, :arglists (quote ([reference start]))}, footnote {:protocol-inline nil, :meta {:file "/home/rebel/developer/megasite/target/cljsbuild/public/js/out/markdown/links.cljc", :line 112, :column 7, :end-line 112, :end-column 15, :arglists (quote ([text]))}, :name markdown.links/footnote, :variadic false, :file "target/cljsbuild/public/js/out/markdown/links.cljc", :end-column 15, :method-params ([text]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 112, :end-line 112, :max-fixed-arity 1, :fn-var true, :arglists (quote ([text]))}, parse-reference-link {:protocol-inline nil, :meta {:file "/home/rebel/developer/megasite/target/cljsbuild/public/js/out/markdown/links.cljc", :line 87, :column 7, :end-line 87, :end-column 27, :arglists (quote ([line references]))}, :name markdown.links/parse-reference-link, :variadic false, :file "target/cljsbuild/public/js/out/markdown/links.cljc", :end-column 27, :method-params ([line references]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 87, :end-line 87, :max-fixed-arity 2, :fn-var true, :arglists (quote ([line references]))}, reference {:protocol-inline nil, :meta {:file "/home/rebel/developer/megasite/target/cljsbuild/public/js/out/markdown/links.cljc", :line 78, :column 7, :end-line 78, :end-column 16, :arglists (quote ([text]))}, :name markdown.links/reference, :variadic false, :file "target/cljsbuild/public/js/out/markdown/links.cljc", :end-column 16, :method-params ([text]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 78, :end-line 78, :max-fixed-arity 1, :fn-var true, :arglists (quote ([text]))}, link {:name markdown.links/link, :file "target/cljsbuild/public/js/out/markdown/links.cljc", :line 75, :column 1, :end-line 75, :end-column 10, :meta {:file "/home/rebel/developer/megasite/target/cljsbuild/public/js/out/markdown/links.cljc", :line 75, :column 6, :end-line 75, :end-column 10}}, image {:name markdown.links/image, :file "target/cljsbuild/public/js/out/markdown/links.cljc", :line 76, :column 1, :end-line 76, :end-column 11, :meta {:file "/home/rebel/developer/megasite/target/cljsbuild/public/js/out/markdown/links.cljc", :line 76, :column 6, :end-line 76, :end-column 11}}, process-link-title {:protocol-inline nil, :meta {:file "/home/rebel/developer/megasite/target/cljsbuild/public/js/out/markdown/links.cljc", :line 33, :column 7, :end-line 33, :end-column 25, :arglists (quote ([title state]))}, :name markdown.links/process-link-title, :variadic false, :file "target/cljsbuild/public/js/out/markdown/links.cljc", :end-column 25, :method-params ([title state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 33, :end-line 33, :max-fixed-arity 2, :fn-var true, :arglists (quote ([title state]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:codeblock :footnotes :unprocessed :else :references :next-fn-id :code :processed}, :order [:code :codeblock :else :references :unprocessed :next-fn-id :footnotes :processed]}, :doc nil}